<?xml version="1.1" encoding="UTF-8" standalone="no"?><flow-definition plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.8.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.8.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.13">
      <gitLabConnection>gitvsm</gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2660.vb_c0412dc4e6d">
    <script>def isJava = true;  
// git repo
def gitUrl = ''
def gitBranch = 'main'
// project
def projectGroup = 'aws'
def projectName = "aws-zero-downtime"
def namespace = "aws-dev"
def helmValues = "/helm-values/project-values/aws-zero-down-time/values-dev.yaml"
/// DO NOT CHANGE BELOW
// key login
def gitCredential = 'jenkins-git'
def deployDirectory = '/var/lib/jenkins/workspace/AWS/AWS-DEV/helm-values'
def mavenBuild = 'echo 1'
dockerBuildCommand = './'
def version = 'dev-0.0.${BUILD_NUMBER}'
if (isJava == true) {
    mavenBuild = '/bin/bash ./mvnw -DskipTests clean package'
}
pipeline {
    agent any
    tools {
        jdk 'jdk11'
        }
    environment {
        DOCKER_REGISTRY = 'https://registry-oceanpark.vsmart.net'
        DOCKER_IMAGE_NAME = "cipms-377617/${projectGroup}/${projectName}"
        DOCKER_IMAGE = "registry-oceanpark.vsmart.net/${DOCKER_IMAGE_NAME}"
    }
    stages {
        stage('Update helm  value') {
          steps {
            build job: "AWS/AWS-DEV/helm-values", wait: true
          }
        }
        stage('Checkout project') {
          steps {
            git branch: gitBranch,
                credentialsId: gitCredential,
                url: gitUrl
          }
        }
        stage('Build And Push Docker Image') {
            steps {
                script {
                    sh "git reset --hard"
                    sh "git clean -f"
                    sh "${mavenBuild}"
                    app = docker.build(DOCKER_IMAGE_NAME, dockerBuildCommand)
                    docker.withRegistry( DOCKER_REGISTRY) {
                       app.push(version)
                    }
                    sh "docker rmi ${DOCKER_IMAGE_NAME} -f"
                    sh "docker rmi ${DOCKER_IMAGE}:${version} -f"
                }
            }
        }
        stage('Apply k8s') {
            steps {
                script {
                    sh "helm upgrade $projectName $deployDirectory/chart-template/ -f $deployDirectory/$helmValues --namespace=$namespace -i --atomic --cleanup-on-fail --wait --timeout=5m --set fullnameOverride=$projectName,image.repository=${DOCKER_IMAGE},image.tag=${version}"
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>